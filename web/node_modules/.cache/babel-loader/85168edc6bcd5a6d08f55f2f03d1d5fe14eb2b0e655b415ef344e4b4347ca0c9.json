{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"TimeOrder\",\n  style: {\n    \"width\": \"100%\",\n    \"height\": \"500px\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1);\n}","map":{"version":3,"names":["id","style","_createElementBlock","_hoisted_1"],"sources":["/Users/raopend/IdeaProjects/spark-bilibili-analysis/web/src/components/TimeOrder.vue"],"sourcesContent":["<template>\n<div id=\"TimeOrder\" style=\"width:100%;height:500px;\"></div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport * as echarts from 'echarts';\nexport default {\n    name: \"TimeOrder\",\n    mounted() {\n        axios.get('http://localhost:5000/TimeOrder')\n            .then(response => {\n                const data = response.data;\n                this.renderChart(data)\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    },\n    methods: {\n        renderChart(data) {\n            const chartDom = document.getElementById('TimeOrder');\n            const chart = echarts.init(chartDom);\n            const time_point_list = data.map(item => item.time_point);\n            const count_list = data.map(item => item.count);\n            const option = {\n                backgroundColor:\"#101e44\",\n                grid: {\n                    top: 100,\n                    containLabel: true\n                },\n                tooltip: {\n                    trigger: 'axis',\n                    formatter: '{b0}: {c0}'\n                },\n                xAxis: [{\n                    type: \"category\",\n                    boundaryGap: false,\n                    axisLabel: {\n                        formatter: '{value}',\n                        fontSize:14,\n                        margin:20,\n                        textStyle: {\n                            color: \"#7ec7ff\"\n                        }\n                    },\n                    axisLine: {\n                        show:false,\n                    },\n                    splitLine: {\n                        show:false,\n                        lineStyle: {\n                            color: \"#243753\"\n                        }\n                    },\n                    axisTick:{\n                        show:false\n                    },\n                    data: time_point_list\n                }],\n                yAxis: [\n                    {\n                        boundaryGap:false,\n                        type: \"value\",\n                        axisLabel: {\n                            textStyle: {\n                                color: \"#7ec7ff\"\n                            }\n                        },\n                        nameTextStyle: {\n                            color: \"#fff\",\n                            fontSize: 12,\n                            lineHeight: 40\n                        },\n                        splitLine: {\n                            lineStyle: {\n                                color: \"#243753\",\n                                type:'dashed',\n                            }\n                        },\n                        axisLine: {\n                            show: false,\n                            lineStyle:{\n                                color:\"#283352\"\n                            }\n                        },\n                        axisTick: {\n                            show: false\n                        }\n                    }\n                ],\n                series: [{\n                    name: \"报名\",\n                    type: \"line\",\n                    smooth: true,\n                    showSymbol: true,\n                    symbolSize: 10,\n                    zlevel: 3,\n                    itemStyle:{\n                        color:'#19a3df',\n                        borderColor:\"#a3c8d8\"\n                    },\n                    lineStyle: {\n                        normal: {\n                            width:6,\n                            color: \"#19a3df\",\n                        }\n                    },\n                    areaStyle: {\n                        normal: {\n                            color: new echarts.graphic.LinearGradient(\n                                0,\n                                0,\n                                0,\n                                1,\n                                [{\n                                    offset: 0,\n                                    color: \"rgba(88,255,255,.6)\"\n                                },\n                                    {\n                                        offset: 1,\n                                        color: \"rgba(88,255,255,0)\"\n                                    }\n                                ],\n                                false\n                            ),\n                        }\n                    },\n                    data: count_list\n                }]\n            };\n            chart.setOption(option);\n        }\n    }\n}\n</script>\n\n<style scoped>\n\n</style>"],"mappings":";;EACKA,EAAE,EAAC,WAAW;EAACC,KAAgC,EAAhC;IAAA;IAAA;EAAA;;;uBAApBC,mBAAA,CAA2D,OAA3DC,UAA2D"},"metadata":{},"sourceType":"module","externalDependencies":[]}