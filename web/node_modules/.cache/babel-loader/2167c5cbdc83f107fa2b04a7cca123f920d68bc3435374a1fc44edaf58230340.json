{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"SucceedGoodsTop\",\n  style: {\n    \"width\": \"100%\",\n    \"height\": \"500px\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1);\n}","map":{"version":3,"names":["id","style","_createElementBlock","_hoisted_1"],"sources":["/Users/raopend/IdeaProjects/spark-bilibili-analysis/web/src/components/SucceedGoodsTop.vue"],"sourcesContent":["<template>\n    <div id=\"SucceedGoodsTop\" style=\"width:100%;height:500px;\"></div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport echarts from 'echarts';\n\nexport default {\n    name: 'SucceedGoodsTop',\n    mounted() {\n        axios.get('http://localhost:5000/SucceedGoodsTop')\n            .then(response => {\n                const data = response.data;\n                this.renderChart(data)\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    },\n    methods: {\n        renderChart(data) {\n            const chartDom = document.getElementById('SucceedGoodsTop');\n            const chart = echarts.init(chartDom);\n\n            const option = {\n                backgroundColor: '#04243E',\n                tooltip: {\n                    trigger: 'axis',\n                    show: false,\n                    axisPointer: { // 坐标轴指示器，坐标轴触发有效\n                        type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n                    },\n                },\n                legend: {\n                    selectedMode: false,\n                    textStyle: {\n                        color:\"#fff\"\n                    }\n                },\n                title: {\n                    text: 'Item Count'\n                },\n                xAxis: {\n                    type: 'value',\n                    name: 'Count'\n                },\n                yAxis: {\n                    type: 'category',\n                    data: data.map(item => item.item_name),\n                    name: 'Item Name'\n                },\n                series: [{\n                    name: 'Count',\n                    type: 'bar',\n                    data: data.map(item => item.count),\n                    label: {\n                        show: true,\n                        position: 'left'\n                    }\n                }]\n            };\n\n            chart.setOption(option);\n        }\n    }\n}\n</script>"],"mappings":";;EACSA,EAAE,EAAC,iBAAiB;EAACC,KAAgC,EAAhC;IAAA;IAAA;EAAA;;;uBAA1BC,mBAAA,CAAiE,OAAjEC,UAAiE"},"metadata":{},"sourceType":"module","externalDependencies":[]}