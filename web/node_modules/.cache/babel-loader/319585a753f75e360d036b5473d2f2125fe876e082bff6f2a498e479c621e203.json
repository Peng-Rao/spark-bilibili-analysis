{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"orders-price-range\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"订单商品价格区间分布情况\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"OrdersPriceRangePie\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_4 = [_hoisted_2, _hoisted_3];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, _hoisted_4);\n}","map":{"version":3,"names":["class","_createElementVNode","id","_hoisted_2","_hoisted_3","_createElementBlock","_hoisted_1","_hoisted_4"],"sources":["/Users/raopend/IdeaProjects/spark-bilibili-analysis/web/src/components/ordersPriceRangePie.vue"],"sourcesContent":["<template>\n    <div class=\"orders-price-range\">\n        <h3>订单商品价格区间分布情况</h3>\n        <div id=\"OrdersPriceRangePie\"></div>\n    </div>\n</template>\n\n<script>\nimport echarts from 'echarts';\nimport axios from 'axios'\n\nexport default {\n    name: 'OrdersPriceRangePie',\n    data () {\n        return {\n            data: []\n        }\n    },\n    mounted () {\n        axios.get('http://localhost:5000/OrderPriceRange')\n            .then(response => {\n                this.data = response.data;\n                this.renderChart();\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    },\n    methods: {\n        renderChart() {\n            const chartDom = document.getElementById('OrdersPriceRangePie');\n            const chart = echarts.init(chartDom);\n            const option = {\n                title: {\n                    text: 'Price Distribution'\n                },\n                tooltip: {\n                    trigger: 'item',\n                    formatter: '{b} : {c} ({d}%)'\n                },\n                legend: {\n                    orient: 'horizontal',\n                    bottom: 10,\n                    data: this.data.map(item => item.price_range)\n                },\n                series: [\n                    {\n                        type: 'pie',\n                        radius: '50%',\n                        center: ['50%', '50%'],\n                        data: this.data.map(item => ({\n                            name: item.price_range,\n                            value: item.count\n                        })),\n                        itemStyle: {\n                            emphasis: {\n                                shadowBlur: 10,\n                                shadowOffsetX: 0,\n                                shadowColor: 'rgba(0, 0, 0, 0.5)'\n                            }\n                        }\n                    }\n                ]\n            };\n            chart.setOption(option);\n        }\n    }\n}\n</script>\n<style scoped>\n</style>"],"mappings":";;EACSA,KAAK,EAAC;AAAoB;gCAC3BC,mBAAA,CAAqB,YAAjB,cAAY;gCAChBA,mBAAA,CAAoC;EAA/BC,EAAE,EAAC;AAAqB;oBAD7BC,UAAqB,EACrBC,UAAoC,C;;uBAFxCC,mBAAA,CAGM,OAHNC,UAGM,EAAAC,UAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}