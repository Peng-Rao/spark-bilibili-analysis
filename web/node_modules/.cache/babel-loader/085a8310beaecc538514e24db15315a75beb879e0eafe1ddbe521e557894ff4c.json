{"ast":null,"code":"import axios from 'axios';\nimport * as echarts from 'echarts';\nexport default {\n  name: \"TimeOrder\",\n  mounted() {\n    axios.get('http://localhost:5000/TimeOrder').then(response => {\n      const data = response.data;\n      this.renderChart(data);\n    }).catch(error => {\n      console.log(error);\n    });\n  },\n  methods: {\n    renderChart(data) {\n      const chartDom = document.getElementById('TimeOrder');\n      const chart = echarts.init(chartDom);\n      const time_point_list = data.map(item => item.time_point);\n      const count_list = data.map(item => item.count);\n      const option = {\n        backgroundColor: \"#101e44\",\n        grid: {\n          top: 100,\n          containLabel: true\n        },\n        tooltip: {\n          trigger: 'axis',\n          formatter: '{b0}: {c0}'\n        },\n        xAxis: [{\n          type: \"category\",\n          boundaryGap: false,\n          axisLabel: {\n            formatter: '{value}',\n            fontSize: 14,\n            margin: 20,\n            textStyle: {\n              color: \"#7ec7ff\"\n            }\n          },\n          axisLine: {\n            show: false\n          },\n          splitLine: {\n            show: false,\n            lineStyle: {\n              color: \"#243753\"\n            }\n          },\n          axisTick: {\n            show: false\n          },\n          data: time_point_list\n        }],\n        yAxis: [{\n          boundaryGap: false,\n          type: \"value\",\n          axisLabel: {\n            textStyle: {\n              color: \"#7ec7ff\"\n            }\n          },\n          nameTextStyle: {\n            color: \"#fff\",\n            fontSize: 12,\n            lineHeight: 40\n          },\n          splitLine: {\n            lineStyle: {\n              color: \"#243753\",\n              type: 'dashed'\n            }\n          },\n          axisLine: {\n            show: false,\n            lineStyle: {\n              color: \"#283352\"\n            }\n          },\n          axisTick: {\n            show: false\n          }\n        }],\n        series: [{\n          name: \"报名\",\n          type: \"line\",\n          smooth: true,\n          showSymbol: true,\n          symbolSize: 10,\n          zlevel: 3,\n          itemStyle: {\n            color: '#19a3df',\n            borderColor: \"#a3c8d8\"\n          },\n          lineStyle: {\n            normal: {\n              width: 6,\n              color: \"#19a3df\"\n            }\n          },\n          areaStyle: {\n            normal: {\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                offset: 0,\n                color: \"rgba(88,255,255,.6)\"\n              }, {\n                offset: 1,\n                color: \"rgba(88,255,255,0)\"\n              }], false)\n            }\n          },\n          data: count_list\n        }]\n      };\n      chart.setOption(option);\n    }\n  }\n};","map":{"version":3,"names":["axios","echarts","name","mounted","get","then","response","data","renderChart","catch","error","console","log","methods","chartDom","document","getElementById","chart","init","time_point_list","map","item","time_point","count_list","count","option","backgroundColor","grid","top","containLabel","tooltip","trigger","formatter","xAxis","type","boundaryGap","axisLabel","fontSize","margin","textStyle","color","axisLine","show","splitLine","lineStyle","axisTick","yAxis","nameTextStyle","lineHeight","series","smooth","showSymbol","symbolSize","zlevel","itemStyle","borderColor","normal","width","areaStyle","graphic","LinearGradient","offset","setOption"],"sources":["/Users/raopend/IdeaProjects/spark-bilibili-analysis/web/src/components/TimeOrder.vue"],"sourcesContent":["<template>\n<div id=\"TimeOrder\" style=\"width:100%;height:500px;\"></div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport * as echarts from 'echarts';\nexport default {\n    name: \"TimeOrder\",\n    mounted() {\n        axios.get('http://localhost:5000/TimeOrder')\n            .then(response => {\n                const data = response.data;\n                this.renderChart(data)\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    },\n    methods: {\n        renderChart(data) {\n            const chartDom = document.getElementById('TimeOrder');\n            const chart = echarts.init(chartDom);\n            const time_point_list = data.map(item => item.time_point);\n            const count_list = data.map(item => item.count);\n            const option = {\n                backgroundColor:\"#101e44\",\n                grid: {\n                    top: 100,\n                    containLabel: true\n                },\n                tooltip: {\n                    trigger: 'axis',\n                    formatter: '{b0}: {c0}'\n                },\n                xAxis: [{\n                    type: \"category\",\n                    boundaryGap: false,\n                    axisLabel: {\n                        formatter: '{value}',\n                        fontSize:14,\n                        margin:20,\n                        textStyle: {\n                            color: \"#7ec7ff\"\n                        }\n                    },\n                    axisLine: {\n                        show:false,\n                    },\n                    splitLine: {\n                        show:false,\n                        lineStyle: {\n                            color: \"#243753\"\n                        }\n                    },\n                    axisTick:{\n                        show:false\n                    },\n                    data: time_point_list\n                }],\n                yAxis: [\n                    {\n                        boundaryGap:false,\n                        type: \"value\",\n                        axisLabel: {\n                            textStyle: {\n                                color: \"#7ec7ff\"\n                            }\n                        },\n                        nameTextStyle: {\n                            color: \"#fff\",\n                            fontSize: 12,\n                            lineHeight: 40\n                        },\n                        splitLine: {\n                            lineStyle: {\n                                color: \"#243753\",\n                                type:'dashed',\n                            }\n                        },\n                        axisLine: {\n                            show: false,\n                            lineStyle:{\n                                color:\"#283352\"\n                            }\n                        },\n                        axisTick: {\n                            show: false\n                        }\n                    }\n                ],\n                series: [{\n                    name: \"报名\",\n                    type: \"line\",\n                    smooth: true,\n                    showSymbol: true,\n                    symbolSize: 10,\n                    zlevel: 3,\n                    itemStyle:{\n                        color:'#19a3df',\n                        borderColor:\"#a3c8d8\"\n                    },\n                    lineStyle: {\n                        normal: {\n                            width:6,\n                            color: \"#19a3df\",\n                        }\n                    },\n                    areaStyle: {\n                        normal: {\n                            color: new echarts.graphic.LinearGradient(\n                                0,\n                                0,\n                                0,\n                                1,\n                                [{\n                                    offset: 0,\n                                    color: \"rgba(88,255,255,.6)\"\n                                },\n                                    {\n                                        offset: 1,\n                                        color: \"rgba(88,255,255,0)\"\n                                    }\n                                ],\n                                false\n                            ),\n                        }\n                    },\n                    data: count_list\n                }]\n            };\n            chart.setOption(option);\n        }\n    }\n}\n</script>\n\n<style scoped>\n\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}