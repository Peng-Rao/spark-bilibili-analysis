{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"OrderPriceRange\",\n  style: {\n    \"width\": \"100%\",\n    \"height\": \"300px\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1);\n}","map":{"version":3,"names":["id","style","_createElementBlock","_hoisted_1"],"sources":["/Users/raopend/IdeaProjects/spark-bilibili-analysis/web/src/components/OrderPriceRange.vue"],"sourcesContent":["<template>\n    <div id=\"OrderPriceRange\" style=\"width:100%;height:300px;\"></div>\n</template>\n<script>\nimport axios from 'axios';\nimport * as echarts from 'echarts';\n\nexport default {\n    name: 'OrderPriceRange',\n    data () {\n        return {\n            data: []\n        }\n    },\n    mounted () {\n        axios.get('http://localhost:5000/OrderPriceRange')\n            .then(response => {\n                this.data = response.data;\n                this.renderChart();\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    },\n    methods: {\n        renderChart() {\n            const chartDom = document.getElementById('OrderPriceRange');\n            const chart = echarts.init(chartDom);\n            const option = {\n                backgroundColor: '#04243E',\n                tooltip: {\n                    trigger: 'item',\n                },\n                legend: {\n                    orient: 'horizontal',\n                    bottom:\"15%\",\n                    left: \"20%\",\n                    textStyle: {\n                        color:\"#fff\"\n                    },\n                },\n                toolbox: {\n                    show: false\n                },\n                series: [\n                    {\n                        type: 'pie',\n                        radius: '50%',\n                        center: ['50%', '50%'],\n                        data: this.data.map(item => ({\n                            name: item.price_range,\n                            value: item.count\n                        })),\n                        itemStyle: {\n                            emphasis: {\n                                shadowBlur: 10,\n                                shadowOffsetX: 0,\n                                shadowColor: 'rgba(0, 0, 0, 0.5)'\n                            }\n                        }\n                    }\n                ]\n            };\n            chart.setOption(option);\n        }\n    }\n}\n</script>"],"mappings":";;EACSA,EAAE,EAAC,iBAAiB;EAACC,KAAgC,EAAhC;IAAA;IAAA;EAAA;;;uBAA1BC,mBAAA,CAAiE,OAAjEC,UAAiE"},"metadata":{},"sourceType":"module","externalDependencies":[]}